 video#bgvid {
  position: fixed;
  top: 50%;
  left: 50%;
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  z-index: -100;
  -webkit-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
  // background: url(some-fallback-image) no-repeat;
  background-size: cover;
  -webkit-filter: blur(10px);
  -moz-filter: blur(10px);
  -o-filter: blur(10px);
  -ms-filter: blur(10px);
  filter: blur(10px);
}

.rubygroup {
  color: white;
  font-weight: 100;
  margin: auto;
}

.rb-title {
  margin-top: 5em;
  min-height: 500px;
  border-bottom: 1px solid white;

  h1{
    // background-color:rgba(0, 200, 255, 0.1);
    border-bottom: 1px solid white;
    
  }

  h5 {
    // background-color:rgba(255, 255, 255, 0.1);
  }
  h1, h5 {
    border-right: 1px solid white;
  }
}

.mission {
  background-color:rgba(0, 0, 0, 0.2);
  margin-top: 5em;
  min-height: 500px;
  border-bottom: 1px solid white;
}

@-webkit-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@-moz-keyframes fadeIn { from { opacity:0; } to { opacity:1; } }
@keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

.fade-in {
  opacity:0;  /* make things invisible upon start */
  -webkit-animation:fadeIn ease-in 1;  /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
  -moz-animation:fadeIn ease-in 1;
  animation:fadeIn ease-in 1;

  -webkit-animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/
  -moz-animation-fill-mode:forwards;
  animation-fill-mode:forwards;

  -webkit-animation-duration:2s;
  -moz-animation-duration:2s;
  animation-duration:2s;
}


